// <auto-generated />
using System;
using FastMindBank.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FastMindBank.Migrations
{
    [DbContext(typeof(FastMindBankContext))]
    [Migration("20200315221914_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FastMindBank.Model.Agencia", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodigoAgencia");

                    b.Property<int>("DigitoAgencia");

                    b.HasKey("Id");

                    b.ToTable("Agencia");
                });

            modelBuilder.Entity("FastMindBank.Model.Banco", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodigoBanco");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Banco");
                });

            modelBuilder.Entity("FastMindBank.Model.ContaCorrente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AgenciaId");

                    b.Property<long?>("BancoId");

                    b.Property<string>("NomeCliente");

                    b.Property<long>("Conta");

                    b.Property<int>("Digito");

                    b.Property<decimal>("Saldo");

                    b.HasKey("Id");

                    b.HasIndex("AgenciaId");

                    b.HasIndex("BancoId");

                    b.ToTable("ContaCorrente");
                });

            modelBuilder.Entity("FastMindBank.Model.Lancamentos", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ContaCorrenteId");

                    b.Property<decimal>("Credito");

                    b.Property<DateTime>("Data");

                    b.Property<decimal>("Debito");

                    b.Property<string>("Referencia");

                    b.HasKey("Id");

                    b.HasIndex("ContaCorrenteId");

                    b.ToTable("Lancamentos");
                });

            modelBuilder.Entity("FastMindBank.Model.ContaCorrente", b =>
                {
                    b.HasOne("FastMindBank.Model.Agencia", "Agencia")
                        .WithMany()
                        .HasForeignKey("AgenciaId");

                    b.HasOne("FastMindBank.Model.Banco", "Banco")
                        .WithMany()
                        .HasForeignKey("BancoId");
                });

            modelBuilder.Entity("FastMindBank.Model.Lancamentos", b =>
                {
                    b.HasOne("FastMindBank.Model.ContaCorrente", "ContaCorrente")
                        .WithMany("Lancamentos")
                        .HasForeignKey("ContaCorrenteId");
                });
#pragma warning restore 612, 618
        }
    }
}
